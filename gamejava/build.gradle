import se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask

plugins {
    id 'java'
    id 'idea'
    id 'nebula.release' version '15.3.1' // or current latest
    id 'se.bjurr.gitchangelog.git-changelog-gradle-plugin' version '1.66'
//    id 'com.adarshr.test-logger' version '2.1.0'
}
project.ext.projectDisplayName="gamejava"

project.ext.lwjglVersion = "3.2.3"
project.ext.jomlVersion = "1.10.1"
project.ext.lwjglNatives = "natives-macos"

repositories {
    mavenCentral()
}

//sourceSets.main.java.srcDirs = ['src']

dependencies {
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-nfd"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-stb"
    implementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-nfd::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
    implementation "org.joml:joml:${jomlVersion}"

    //    https://www.baeldung.com/junit-5-gradle
    // deprecated compile instructions from intellij.
    // junit seperates api and framework. so the following is done for gradle5.
    testImplementation('org.junit.jupiter:junit-jupiter:5.7.1')

    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.7.1')

}

task showVersion {
    println version
}
test {
    useJUnitPlatform()
     testLogging {
        events "passed", "skipped", "failed"
    }

    afterTest { desc, result ->
        def output = "Class name: ${desc.className}, Test name: ${desc.name},  (Test status: ${result.resultType})"
        println( '\n' + output)
    }
}

task gitChangelogTask(type: GitChangelogTask) {
 file = new File("CHANGELOG.md")
 fromRepo = file("../")
 fromRef = "v0.1.0"
 templateContent = """
Changelog of ${projectDisplayName}.

{{#tags}}
## {{name}}
 {{#issues}}
  {{#hasIssue}}
   {{#hasLink}}
### {{name}} [{{issue}}]({{link}}) {{title}} {{#hasIssueType}} *{{issueType}}* {{/hasIssueType}} {{#hasLabels}} {{#labels}} *{{.}}* {{/labels}} {{/hasLabels}}
   {{/hasLink}}
   {{^hasLink}}
### {{name}} {{issue}} {{title}} {{#hasIssueType}} *{{issueType}}* {{/hasIssueType}} {{#hasLabels}} {{#labels}} *{{.}}* {{/labels}} {{/hasLabels}}
   {{/hasLink}}
  {{/hasIssue}}
  {{^hasIssue}}
### {{name}}
  {{/hasIssue}}

  {{#commits}}
**{{{messageTitle}}}**

{{#messageBodyItems}}
 * {{.}}
{{/messageBodyItems}}

[{{hash}}](https://github.com/{{ownerName}}/{{repoName}}/commit/{{hash}}) {{authorName}} *{{commitTime}}*

  {{/commits}}

 {{/issues}}
{{/tags}}
 """
}